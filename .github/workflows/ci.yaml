name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run type check
      run: npm run type-check
    
    - name: Build
      run: npm run build

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: autohvac_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-eng
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black isort flake8 mypy pytest-asyncio
    
    - name: Run linter (black)
      run: black --check .
    
    - name: Run import sorter (isort)
      run: isort --check-only .
    
    - name: Run flake8
      run: flake8 . --max-line-length=100 --extend-ignore=E203,W503
    
    - name: Run type checker (mypy)
      run: mypy . --ignore-missing-imports --no-strict-optional
    
    - name: Run tests
      run: pytest -v
      env:
        REDIS_URL: redis://localhost:6379/0
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/autohvac_test
        OPENAI_API_KEY: test-key

  api-smoke-test:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python 3.11
      uses: actions/setup-python@v4  
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start backend server
      run: |
        cd backend
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
      env:
        REDIS_URL: redis://localhost:6379/0
        OPENAI_API_KEY: test-key
    
    - name: Test health endpoint
      run: |
        curl -f http://localhost:8000/health || exit 1
    
    - name: Test API endpoints
      run: |
        # Test root endpoint
        curl -f http://localhost:8000/ || exit 1
        
        # Test CORS preflight
        curl -f -X OPTIONS http://localhost:8000/api/v1/blueprint/upload \
          -H "Origin: http://localhost:3000" \
          -H "Access-Control-Request-Method: POST" || exit 1