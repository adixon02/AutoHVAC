services:
  - type: web
    name: autohvac-frontend
    env: node
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    healthCheckPath: /
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://autohvac-backend.onrender.com

  - type: web
    name: autohvac-backend
    env: python
    buildCommand: |
      apt-get update && apt-get install -y tesseract-ocr tesseract-ocr-eng libpoppler-utils poppler-utils libgl1-mesa-glx libglib2.0-0 libmupdf-dev mupdf-tools fonts-liberation fonts-dejavu-core file psmisc
      cd backend && pip install --upgrade pip setuptools wheel && pip install -r requirements.txt
    startCommand: cd backend && uvicorn app.main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /healthz
    # S3 storage configuration required
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: autohvac-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: autohvac-postgres
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: STRIPE_PRICE_ID
        sync: false
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: WEB_CONCURRENCY
        value: "2"
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: us-west-2
      - key: S3_BUCKET
        value: autohvac-uploads
      - key: FILE_CLEANUP_GRACE_DAYS
        value: "7"

  - type: worker
    name: autohvac-worker
    env: python
    buildCommand: |
      apt-get update && apt-get install -y tesseract-ocr tesseract-ocr-eng libpoppler-utils poppler-utils libgl1-mesa-glx libglib2.0-0 libmupdf-dev mupdf-tools fonts-liberation fonts-dejavu-core file psmisc
      cd backend && pip install --upgrade pip setuptools wheel && pip install -r requirements.txt
    startCommand: cd backend && celery -A tasks worker --loglevel=info --concurrency=2 --max-tasks-per-child=50 --max-memory-per-child=512000 --time-limit=1800 --soft-time-limit=1740 --without-gossip --without-mingle --without-heartbeat
    # IMPORTANT: You must manually attach the shared-storage disk to this worker
    # in the Render dashboard with mount path: /var/data
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: autohvac-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: autohvac-postgres
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: C_FORCE_ROOT
        value: "true"
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: us-west-2
      - key: S3_BUCKET
        value: autohvac-uploads
      - key: FILE_CLEANUP_GRACE_DAYS
        value: "7"
    autoDeploy: false

  - type: redis
    name: autohvac-redis
    ipAllowList: []
    maxmemoryPolicy: allkeys-lru

databases:
  - name: autohvac-postgres
    databaseName: autohvac
    user: autohvac
